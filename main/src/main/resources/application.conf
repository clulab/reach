#
# Configuration file for reach
#

# Default top-level root directory for input and output files and subdirectories.
# All other paths are based on this path but any or all can be changed individually:
rootDir = ${HOME}/Documents/reach

# this is the directory that stores the raw nxml, .csv, and/or .tsv files
# this directory *must* exist
papersDir = ${rootDir}/papers

# this is where the output files containing the extracted mentions will be stored
# if this directory doesn't exist it will be created
outDir = ${rootDir}/output

# the output formats for mentions:
# "arizona" (column-based, one file per paper)
# "cmu" (column-based, one file per paper)
# "fries" (multiple JSON files per paper)
# "serial-json" (JSON serialization of mentions data structures. LARGE output!)
# "text" (non-JSON textual format)
outputTypes = ["fries"]

# whether or not assembly should be run
withAssembly = false

# this is where the context files will be stored
# if this directory doesn't exist it will be created
contextDir = ${rootDir}/context

# this is where the brat standoff and text files are dumped
bratDir = ${rootDir}/brat

# verbose logging
verbose = true

# the encoding of input and output files
encoding = "utf-8"

# this is a list of sections that we should ignore
ignoreSections = ["references", "materials", "materials|methods", "methods", "supplementary-material"]

# context engine config
contextEngine {
  type = Policy4
  params = {
    bound = 3
  }
}

# logging configuration
logging {
  # defines project-wide logging level
  loglevel = INFO
  logfile = ${rootDir}/reach.log
}

# restart configuration
restart {
  # restart allows batch jobs to skip over input files already successfully processed
  useRestart = true
  # restart log is one filename per line list of input files already successfully processed
  logfile = ${outDir}/restart.log
}

# grounding configuration
grounding: {
  # List of AdHoc grounding files to insert, in order, into the grounding search sequence.
  # Each element of the list is a map of KB filename and optional meta info (not yet used):
  #   example: { kb: "adhoc.tsv", source: "NMZ at CMU" }
  adHocFiles: [
    { kb: "NER-Grounding-Override.tsv.gz", source: "MITRE/NMZ/BG feedback overrides" }
  ]

  # flag to turn off the influence of species on grounding
  overrideSpecies = true
}

# number of simultaneous threads to use for parallelization
threadLimit = 2

# ReadPapers
ReadPapers.papersDir = src/test/resources/inputs/nxml/
ReadPapers.serializedPapers = mentions.ser
